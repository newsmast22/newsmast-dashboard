#CommunityFilterModal.modal.fade{ role: 'dialog', tabindex: "-1", aria: { labelledby: 'CommunityFilterModalLabel', hidden: 'true' } }
  .modal-dialog.filter-modal-width{ role: 'document' }
    .modal-content
      .modal-header
        %h5#CommunityFilterModal.modal-title Add keyword filtering
        %button.close{ type: 'button', 'data-dismiss': 'modal', 'aria-label': 'Close' }
          = image_tag 'icons/circle-xmark.svg', alt: 'Close', width: 18, height: 18, 'aria-hidden': 'true'
      .modal-body
        - if @community_filter_keyword.filter_type == "filter_in"
          %p.text-muted.small Add a new keyword filter for this channel using the form below. This will allow posts from the wider network which contain this keyword as a hashtag or plain text from appearing in the channel.
        - else
          %p.text-muted.small Add a new keyword filter for this channel using the form below. This will prevent posts from the wider network which contain this keyword as a hashtag or plain text from appearing in the channel.
        - if @token.nil?
          %p.small.red
            = image_tag("icons/exclamation-triangle.svg", class: "ml-2", width: "16", height: "16")
            To create keyword, please enable public feed.
        = simple_form_for @community_filter_keyword, url: '#', html: { method: '#', id: 'filter-form' } do |f|
          = f.hidden_field :patchwork_community_id
          = f.hidden_field :filter_type
          .form-group.row
            .col-12
              = f.input :keyword, label: "Keyword", input_html: { placeholder: "Enter keyword here", id: 'keyword-input' }
          - if @community_filter_keyword.filter_type == "filter_out"
            .form-group.row
              .col-12
                .form-check.filter-hashtag
                  = f.input :is_filter_hashtag, as: :boolean, label: "This keyword is a hashtag", input_html: { id: 'is_filter_hashtag-input', class: 'form-check-input' }
          - else
            = f.hidden_field :is_filter_hashtag

          .modal-footer
            %button.btn.btn-secondary{ "data-dismiss": "modal" } Cancel
            = f.button :submit, 'Save changes', class: 'btn btn-danger'
